"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
exports.__esModule = true;
exports.WrapAndNiftyswap__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var ethers_1 = require("ethers");
var _abi = [
    {
        inputs: [
            {
                internalType: "address payable",
                name: "_tokenWrapper",
                type: "address"
            },
            {
                internalType: "address",
                name: "_exchange",
                type: "address"
            },
            {
                internalType: "address",
                name: "_erc20",
                type: "address"
            },
            {
                internalType: "address",
                name: "_erc1155",
                type: "address"
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor"
    },
    {
        inputs: [],
        name: "erc1155",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address"
            },
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [],
        name: "erc20",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address"
            },
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [],
        name: "exchange",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address"
            },
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "",
                type: "address"
            },
            {
                internalType: "address",
                name: "_from",
                type: "address"
            },
            {
                internalType: "uint256[]",
                name: "_ids",
                type: "uint256[]"
            },
            {
                internalType: "uint256[]",
                name: "_amounts",
                type: "uint256[]"
            },
            {
                internalType: "bytes",
                name: "_niftyswapOrder",
                type: "bytes"
            },
        ],
        name: "onERC1155BatchReceived",
        outputs: [
            {
                internalType: "bytes4",
                name: "",
                type: "bytes4"
            },
        ],
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "",
                type: "address"
            },
            {
                internalType: "address",
                name: "",
                type: "address"
            },
            {
                internalType: "uint256",
                name: "",
                type: "uint256"
            },
            {
                internalType: "uint256",
                name: "",
                type: "uint256"
            },
            {
                internalType: "bytes",
                name: "",
                type: "bytes"
            },
        ],
        name: "onERC1155Received",
        outputs: [
            {
                internalType: "bytes4",
                name: "",
                type: "bytes4"
            },
        ],
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        inputs: [],
        name: "tokenWrapper",
        outputs: [
            {
                internalType: "contract IERC20Wrapper",
                name: "",
                type: "address"
            },
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_maxAmount",
                type: "uint256"
            },
            {
                internalType: "address",
                name: "_recipient",
                type: "address"
            },
            {
                internalType: "bytes",
                name: "_niftyswapOrder",
                type: "bytes"
            },
        ],
        name: "wrapAndSwap",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
    },
];
var _bytecode = "";
var isSuperArgs = function (xs) { return xs.length > 1; };
var WrapAndNiftyswap__factory = /** @class */ (function (_super) {
    __extends(WrapAndNiftyswap__factory, _super);
    function WrapAndNiftyswap__factory() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _this = this;
        if (isSuperArgs(args)) {
            _this = _super.apply(this, args) || this;
        }
        else {
            _this = _super.call(this, _abi, _bytecode, args[0]) || this;
        }
        return _this;
    }
    WrapAndNiftyswap__factory.prototype.deploy = function (_tokenWrapper, _exchange, _erc20, _erc1155, overrides) {
        return _super.prototype.deploy.call(this, _tokenWrapper, _exchange, _erc20, _erc1155, overrides || {});
    };
    WrapAndNiftyswap__factory.prototype.getDeployTransaction = function (_tokenWrapper, _exchange, _erc20, _erc1155, overrides) {
        return _super.prototype.getDeployTransaction.call(this, _tokenWrapper, _exchange, _erc20, _erc1155, overrides || {});
    };
    WrapAndNiftyswap__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    WrapAndNiftyswap__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    WrapAndNiftyswap__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    WrapAndNiftyswap__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    WrapAndNiftyswap__factory.bytecode = _bytecode;
    WrapAndNiftyswap__factory.abi = _abi;
    return WrapAndNiftyswap__factory;
}(ethers_1.ContractFactory));
exports.WrapAndNiftyswap__factory = WrapAndNiftyswap__factory;
