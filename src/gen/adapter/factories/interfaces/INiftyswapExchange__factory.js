"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
exports.__esModule = true;
exports.INiftyswapExchange__factory = void 0;
var ethers_1 = require("ethers");
var _abi = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "buyer",
                type: "address"
            },
            {
                indexed: true,
                internalType: "address",
                name: "recipient",
                type: "address"
            },
            {
                indexed: false,
                internalType: "uint256[]",
                name: "tokensSoldIds",
                type: "uint256[]"
            },
            {
                indexed: false,
                internalType: "uint256[]",
                name: "tokensSoldAmounts",
                type: "uint256[]"
            },
            {
                indexed: false,
                internalType: "uint256[]",
                name: "currencyBoughtAmounts",
                type: "uint256[]"
            },
        ],
        name: "CurrencyPurchase",
        type: "event"
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "provider",
                type: "address"
            },
            {
                indexed: false,
                internalType: "uint256[]",
                name: "tokenIds",
                type: "uint256[]"
            },
            {
                indexed: false,
                internalType: "uint256[]",
                name: "tokenAmounts",
                type: "uint256[]"
            },
            {
                indexed: false,
                internalType: "uint256[]",
                name: "currencyAmounts",
                type: "uint256[]"
            },
        ],
        name: "LiquidityAdded",
        type: "event"
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "provider",
                type: "address"
            },
            {
                indexed: false,
                internalType: "uint256[]",
                name: "tokenIds",
                type: "uint256[]"
            },
            {
                indexed: false,
                internalType: "uint256[]",
                name: "tokenAmounts",
                type: "uint256[]"
            },
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "currencyAmount",
                        type: "uint256"
                    },
                    {
                        internalType: "uint256",
                        name: "soldTokenNumerator",
                        type: "uint256"
                    },
                    {
                        internalType: "uint256",
                        name: "boughtCurrencyNumerator",
                        type: "uint256"
                    },
                    {
                        internalType: "uint256",
                        name: "totalSupply",
                        type: "uint256"
                    },
                ],
                indexed: false,
                internalType: "struct INiftyswapExchange.LiquidityRemovedEventObj[]",
                name: "details",
                type: "tuple[]"
            },
        ],
        name: "LiquidityRemoved",
        type: "event"
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "buyer",
                type: "address"
            },
            {
                indexed: true,
                internalType: "address",
                name: "recipient",
                type: "address"
            },
            {
                indexed: false,
                internalType: "uint256[]",
                name: "tokensBoughtIds",
                type: "uint256[]"
            },
            {
                indexed: false,
                internalType: "uint256[]",
                name: "tokensBoughtAmounts",
                type: "uint256[]"
            },
            {
                indexed: false,
                internalType: "uint256[]",
                name: "currencySoldAmounts",
                type: "uint256[]"
            },
        ],
        name: "TokensPurchase",
        type: "event"
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_assetBoughtAmount",
                type: "uint256"
            },
            {
                internalType: "uint256",
                name: "_assetSoldReserve",
                type: "uint256"
            },
            {
                internalType: "uint256",
                name: "_assetBoughtReserve",
                type: "uint256"
            },
        ],
        name: "getBuyPrice",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256"
            },
        ],
        stateMutability: "pure",
        type: "function"
    },
    {
        inputs: [],
        name: "getCurrencyInfo",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address"
            },
            {
                internalType: "uint256",
                name: "",
                type: "uint256"
            },
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "uint256[]",
                name: "_ids",
                type: "uint256[]"
            },
        ],
        name: "getCurrencyReserves",
        outputs: [
            {
                internalType: "uint256[]",
                name: "",
                type: "uint256[]"
            },
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [],
        name: "getFactoryAddress",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address"
            },
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "uint256[]",
                name: "_ids",
                type: "uint256[]"
            },
            {
                internalType: "uint256[]",
                name: "_tokensBought",
                type: "uint256[]"
            },
        ],
        name: "getPrice_currencyToToken",
        outputs: [
            {
                internalType: "uint256[]",
                name: "",
                type: "uint256[]"
            },
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "uint256[]",
                name: "_ids",
                type: "uint256[]"
            },
            {
                internalType: "uint256[]",
                name: "_tokensSold",
                type: "uint256[]"
            },
        ],
        name: "getPrice_tokenToCurrency",
        outputs: [
            {
                internalType: "uint256[]",
                name: "",
                type: "uint256[]"
            },
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_assetSoldAmount",
                type: "uint256"
            },
            {
                internalType: "uint256",
                name: "_assetSoldReserve",
                type: "uint256"
            },
            {
                internalType: "uint256",
                name: "_assetBoughtReserve",
                type: "uint256"
            },
        ],
        name: "getSellPrice",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256"
            },
        ],
        stateMutability: "pure",
        type: "function"
    },
    {
        inputs: [],
        name: "getTokenAddress",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address"
            },
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "uint256[]",
                name: "_ids",
                type: "uint256[]"
            },
        ],
        name: "getTotalSupply",
        outputs: [
            {
                internalType: "uint256[]",
                name: "",
                type: "uint256[]"
            },
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "",
                type: "address"
            },
            {
                internalType: "address",
                name: "_from",
                type: "address"
            },
            {
                internalType: "uint256[]",
                name: "_ids",
                type: "uint256[]"
            },
            {
                internalType: "uint256[]",
                name: "_amounts",
                type: "uint256[]"
            },
            {
                internalType: "bytes",
                name: "_data",
                type: "bytes"
            },
        ],
        name: "onERC1155BatchReceived",
        outputs: [
            {
                internalType: "bytes4",
                name: "",
                type: "bytes4"
            },
        ],
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_operator",
                type: "address"
            },
            {
                internalType: "address",
                name: "_from",
                type: "address"
            },
            {
                internalType: "uint256",
                name: "_id",
                type: "uint256"
            },
            {
                internalType: "uint256",
                name: "_amount",
                type: "uint256"
            },
            {
                internalType: "bytes",
                name: "_data",
                type: "bytes"
            },
        ],
        name: "onERC1155Received",
        outputs: [
            {
                internalType: "bytes4",
                name: "",
                type: "bytes4"
            },
        ],
        stateMutability: "nonpayable",
        type: "function"
    },
];
var INiftyswapExchange__factory = /** @class */ (function () {
    function INiftyswapExchange__factory() {
    }
    INiftyswapExchange__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    INiftyswapExchange__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    INiftyswapExchange__factory.abi = _abi;
    return INiftyswapExchange__factory;
}());
exports.INiftyswapExchange__factory = INiftyswapExchange__factory;
