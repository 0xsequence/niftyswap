/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "ethers";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";
import { TypedEventFilter, TypedEvent, TypedListener } from "./commons";

interface ERC1155MetadataPrefixInterface extends ethers.utils.Interface {
  functions: {
    "_addressToStrign(address)": FunctionFragment;
    "_bytesToString(bytes)": FunctionFragment;
    "getOwner()": FunctionFragment;
    "setUriPrefix(string)": FunctionFragment;
    "transferOwnership(address)": FunctionFragment;
    "uri(uint256)": FunctionFragment;
    "uriPrefix()": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "_addressToStrign",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "_bytesToString",
    values: [BytesLike]
  ): string;
  encodeFunctionData(functionFragment: "getOwner", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "setUriPrefix",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "transferOwnership",
    values: [string]
  ): string;
  encodeFunctionData(functionFragment: "uri", values: [BigNumberish]): string;
  encodeFunctionData(functionFragment: "uriPrefix", values?: undefined): string;

  decodeFunctionResult(
    functionFragment: "_addressToStrign",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_bytesToString",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getOwner", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "setUriPrefix",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "uri", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "uriPrefix", data: BytesLike): Result;

  events: {
    "OwnershipTransferred(address,address)": EventFragment;
    "URIPrefixChanged(string)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "OwnershipTransferred"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "URIPrefixChanged"): EventFragment;
}

export class ERC1155MetadataPrefix extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  listeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter?: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): Array<TypedListener<EventArgsArray, EventArgsObject>>;
  off<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  on<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  once<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeListener<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeAllListeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): this;

  listeners(eventName?: string): Array<Listener>;
  off(eventName: string, listener: Listener): this;
  on(eventName: string, listener: Listener): this;
  once(eventName: string, listener: Listener): this;
  removeListener(eventName: string, listener: Listener): this;
  removeAllListeners(eventName?: string): this;

  queryFilter<EventArgsArray extends Array<any>, EventArgsObject>(
    event: TypedEventFilter<EventArgsArray, EventArgsObject>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEvent<EventArgsArray & EventArgsObject>>>;

  interface: ERC1155MetadataPrefixInterface;

  functions: {
    _addressToStrign(
      account: string,
      overrides?: CallOverrides
    ): Promise<[string]>;

    "_addressToStrign(address)"(
      account: string,
      overrides?: CallOverrides
    ): Promise<[string]>;

    _bytesToString(
      data: BytesLike,
      overrides?: CallOverrides
    ): Promise<[string]>;

    "_bytesToString(bytes)"(
      data: BytesLike,
      overrides?: CallOverrides
    ): Promise<[string]>;

    getOwner(overrides?: CallOverrides): Promise<[string]>;

    "getOwner()"(overrides?: CallOverrides): Promise<[string]>;

    setUriPrefix(
      _uriPrefix: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "setUriPrefix(string)"(
      _uriPrefix: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    transferOwnership(
      _newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "transferOwnership(address)"(
      _newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    uri(_id: BigNumberish, overrides?: CallOverrides): Promise<[string]>;

    "uri(uint256)"(
      _id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    uriPrefix(overrides?: CallOverrides): Promise<[string]>;

    "uriPrefix()"(overrides?: CallOverrides): Promise<[string]>;
  };

  _addressToStrign(account: string, overrides?: CallOverrides): Promise<string>;

  "_addressToStrign(address)"(
    account: string,
    overrides?: CallOverrides
  ): Promise<string>;

  _bytesToString(data: BytesLike, overrides?: CallOverrides): Promise<string>;

  "_bytesToString(bytes)"(
    data: BytesLike,
    overrides?: CallOverrides
  ): Promise<string>;

  getOwner(overrides?: CallOverrides): Promise<string>;

  "getOwner()"(overrides?: CallOverrides): Promise<string>;

  setUriPrefix(
    _uriPrefix: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "setUriPrefix(string)"(
    _uriPrefix: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  transferOwnership(
    _newOwner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "transferOwnership(address)"(
    _newOwner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  uri(_id: BigNumberish, overrides?: CallOverrides): Promise<string>;

  "uri(uint256)"(_id: BigNumberish, overrides?: CallOverrides): Promise<string>;

  uriPrefix(overrides?: CallOverrides): Promise<string>;

  "uriPrefix()"(overrides?: CallOverrides): Promise<string>;

  callStatic: {
    _addressToStrign(
      account: string,
      overrides?: CallOverrides
    ): Promise<string>;

    "_addressToStrign(address)"(
      account: string,
      overrides?: CallOverrides
    ): Promise<string>;

    _bytesToString(data: BytesLike, overrides?: CallOverrides): Promise<string>;

    "_bytesToString(bytes)"(
      data: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    getOwner(overrides?: CallOverrides): Promise<string>;

    "getOwner()"(overrides?: CallOverrides): Promise<string>;

    setUriPrefix(_uriPrefix: string, overrides?: CallOverrides): Promise<void>;

    "setUriPrefix(string)"(
      _uriPrefix: string,
      overrides?: CallOverrides
    ): Promise<void>;

    transferOwnership(
      _newOwner: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "transferOwnership(address)"(
      _newOwner: string,
      overrides?: CallOverrides
    ): Promise<void>;

    uri(_id: BigNumberish, overrides?: CallOverrides): Promise<string>;

    "uri(uint256)"(
      _id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    uriPrefix(overrides?: CallOverrides): Promise<string>;

    "uriPrefix()"(overrides?: CallOverrides): Promise<string>;
  };

  filters: {
    OwnershipTransferred(
      previousOwner: string | null,
      newOwner: string | null
    ): TypedEventFilter<
      [string, string],
      { previousOwner: string; newOwner: string }
    >;

    URIPrefixChanged(
      _uriPrefix: null
    ): TypedEventFilter<[string], { _uriPrefix: string }>;
  };

  estimateGas: {
    _addressToStrign(
      account: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "_addressToStrign(address)"(
      account: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    _bytesToString(
      data: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "_bytesToString(bytes)"(
      data: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getOwner(overrides?: CallOverrides): Promise<BigNumber>;

    "getOwner()"(overrides?: CallOverrides): Promise<BigNumber>;

    setUriPrefix(
      _uriPrefix: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "setUriPrefix(string)"(
      _uriPrefix: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    transferOwnership(
      _newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "transferOwnership(address)"(
      _newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    uri(_id: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>;

    "uri(uint256)"(
      _id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    uriPrefix(overrides?: CallOverrides): Promise<BigNumber>;

    "uriPrefix()"(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    _addressToStrign(
      account: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "_addressToStrign(address)"(
      account: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    _bytesToString(
      data: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "_bytesToString(bytes)"(
      data: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getOwner(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "getOwner()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    setUriPrefix(
      _uriPrefix: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "setUriPrefix(string)"(
      _uriPrefix: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    transferOwnership(
      _newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "transferOwnership(address)"(
      _newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    uri(
      _id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "uri(uint256)"(
      _id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    uriPrefix(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "uriPrefix()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;
  };
}
