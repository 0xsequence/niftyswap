/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  WrapAndNiftyswap,
  WrapAndNiftyswapInterface,
} from "../WrapAndNiftyswap";

const _abi = [
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_tokenWrapper",
        type: "address",
      },
      {
        internalType: "address",
        name: "_exchange",
        type: "address",
      },
      {
        internalType: "address",
        name: "_erc20",
        type: "address",
      },
      {
        internalType: "address",
        name: "_erc1155",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "erc1155",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "exchange",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "_ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "_niftyswapOrder",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenWrapper",
    outputs: [
      {
        internalType: "contract IERC20Wrapper",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_maxAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_niftyswapOrder",
        type: "bytes",
      },
    ],
    name: "wrapAndSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "";

type WrapAndNiftyswapConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WrapAndNiftyswapConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WrapAndNiftyswap__factory extends ContractFactory {
  constructor(...args: WrapAndNiftyswapConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _tokenWrapper: string,
    _exchange: string,
    _erc20: string,
    _erc1155: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<WrapAndNiftyswap> {
    return super.deploy(
      _tokenWrapper,
      _exchange,
      _erc20,
      _erc1155,
      overrides || {}
    ) as Promise<WrapAndNiftyswap>;
  }
  getDeployTransaction(
    _tokenWrapper: string,
    _exchange: string,
    _erc20: string,
    _erc1155: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _tokenWrapper,
      _exchange,
      _erc20,
      _erc1155,
      overrides || {}
    );
  }
  attach(address: string): WrapAndNiftyswap {
    return super.attach(address) as WrapAndNiftyswap;
  }
  connect(signer: Signer): WrapAndNiftyswap__factory {
    return super.connect(signer) as WrapAndNiftyswap__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WrapAndNiftyswapInterface {
    return new utils.Interface(_abi) as WrapAndNiftyswapInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WrapAndNiftyswap {
    return new Contract(address, _abi, signerOrProvider) as WrapAndNiftyswap;
  }
}
