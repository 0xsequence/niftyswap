/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { ERC1155MetadataPrefix } from "../ERC1155MetadataPrefix";

export class ERC1155MetadataPrefix__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _prefix: string,
    _includeAddress: boolean,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC1155MetadataPrefix> {
    return super.deploy(
      _prefix,
      _includeAddress,
      overrides || {}
    ) as Promise<ERC1155MetadataPrefix>;
  }
  getDeployTransaction(
    _prefix: string,
    _includeAddress: boolean,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _prefix,
      _includeAddress,
      overrides || {}
    );
  }
  attach(address: string): ERC1155MetadataPrefix {
    return super.attach(address) as ERC1155MetadataPrefix;
  }
  connect(signer: Signer): ERC1155MetadataPrefix__factory {
    return super.connect(signer) as ERC1155MetadataPrefix__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155MetadataPrefix {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ERC1155MetadataPrefix;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_prefix",
        type: "string",
      },
      {
        internalType: "bool",
        name: "_includeAddress",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "_uriPrefix",
        type: "string",
      },
    ],
    name: "URIPrefixChanged",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "_addressToStrign",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "_bytesToString",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_uriPrefix",
        type: "string",
      },
    ],
    name: "setUriPrefix",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "uriPrefix",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162000d9e38038062000d9e833981810160405260408110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b9083019060208201858111156200006e57600080fd5b82516401000000008111828201881017156200008957600080fd5b82525081516020918201929091019080838360005b83811015620000b85781810151838201526020016200009e565b50505050905090810190601f168015620000e65780820380516001836020036101000a031916815260200191505b50604081905260209190910151600080546001600160a01b03191633908117825591945090925082917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3507f532d3d5cdc662ef49a0347b14c41825ddd3fff96e47013e8602735db8ca7b904826040518080602001828103825283818151815260200191508051906020019080838360005b83811015620001965781810151838201526020016200017c565b50505050905090810190601f168015620001c45780820380516001836020036101000a031916815260200191505b509250505060405180910390a18151620001e6906001906020850190620001f6565b50151560f81b60805250620002a2565b828054600181600116156101000203166002900490600052602060002090601f0160209004810192826200022e576000855562000279565b82601f106200024957805160ff191683800117855562000279565b8280016001018555821562000279579182015b82811115620002795782518255916020019190600101906200025c565b50620002879291506200028b565b5090565b5b808211156200028757600081556001016200028c565b60805160f81c610ade620002c0600039806102b45250610ade6000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063893d20e81161005b578063893d20e81461018e578063aaa8d737146101b2578063ca8bf2f7146101d8578063f2fde38b1461027e5761007d565b80630e89341c1461008257806362b99ad4146101145780637ec4a6591461011c575b600080fd5b61009f6004803603602081101561009857600080fd5b50356102a4565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100d95781810151838201526020016100c1565b50505050905090810190601f1680156101065780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61009f61046f565b61018c6004803603602081101561013257600080fd5b81019060208101813564010000000081111561014d57600080fd5b82018360208201111561015f57600080fd5b8035906020019184600183028401116401000000008311171561018157600080fd5b5090925090506104fc565b005b6101966105a0565b604080516001600160a01b039092168252519081900360200190f35b61009f600480360360208110156101c857600080fd5b50356001600160a01b03166105af565b61009f600480360360208110156101ee57600080fd5b81019060208101813564010000000081111561020957600080fd5b82018360208201111561021b57600080fd5b8035906020019184600183028401116401000000008311171561023d57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506105eb945050505050565b61018c6004803603602081101561029457600080fd5b50356001600160a01b03166107ba565b6060806102b083610865565b90507f0000000000000000000000000000000000000000000000000000000000000000156103a557806102e2336105af565b6040516020018083805190602001908083835b602083106103145780518252601f1990920191602091820191016102f5565b6001836020036101000a03801982511681845116808217855250505050505090500180600160fe1b81525060010182805190602001908083835b6020831061036d5780518252601f19909201916020918201910161034e565b6001836020036101000a0380198251168184511680821785525050505050509050019250505060405160208183030381529060405290505b60018160405160200180838054600181600116156101000203166002900480156104065780601f106103e4576101008083540402835291820191610406565b820191906000526020600020905b8154815290600101906020018083116103f2575b5050825160208401908083835b602083106104325780518252601f199092019160209182019101610413565b6001836020036101000a03801982511681845116808217855250505050505090500192505050604051602081830303815290604052915050919050565b60018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156104f45780601f106104c9576101008083540402835291602001916104f4565b820191906000526020600020905b8154815290600101906020018083116104d757829003601f168201915b505050505081565b6000546001600160a01b0316331461052f5760405162461bcd60e51b815260040161052690610a62565b60405180910390fd5b7f532d3d5cdc662ef49a0347b14c41825ddd3fff96e47013e8602735db8ca7b904828260405180806020018281038252848482818152602001925080828437600083820152604051601f909101601f19169092018290039550909350505050a161059b60018383610977565b505050565b6000546001600160a01b031690565b60606105e58260405160200180826001600160a01b031660601b81526014019150506040516020818303038152906040526105eb565b92915050565b6060806040518060400160405280601081526020017f303132333435363738396162636465660000000000000000000000000000000081525090506060835160020260020167ffffffffffffffff8111801561064657600080fd5b506040519080825280601f01601f191660200182016040528015610671576020820181803683370190505b509050600360fc1b8160008151811061068657fe5b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106106af57fe5b60200101906001600160f81b031916908160001a90535060005b84518110156107b2578260048683815181106106e157fe5b016020015182517fff0000000000000000000000000000000000000000000000000000000000000090911690911c60f81c90811061071b57fe5b602001015160f81c60f81b82826002026002018151811061073857fe5b60200101906001600160f81b031916908160001a9053508285828151811061075c57fe5b602091010151815160f89190911c600f1690811061077657fe5b602001015160f81c60f81b82826002026003018151811061079357fe5b60200101906001600160f81b031916908160001a9053506001016106c9565b509392505050565b6000546001600160a01b031633146107e45760405162461bcd60e51b815260040161052690610a62565b6001600160a01b03811661080a5760405162461bcd60e51b815260040161052690610a18565b6000805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383811691821780845560405192939116917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a350565b60408051604e808252608082019092526060918291906020820181803683370190505090508260005b81156108d4578251600a808404936001840193919006916030830160f81b91869181106108b757fe5b60200101906001600160f81b031916908160001a9053505061088e565b60608167ffffffffffffffff811180156108ed57600080fd5b506040519080825280601f01601f191660200182016040528015610918576020820181803683370190505b50905060005b8281101561096d57848160018503038151811061093757fe5b602001015160f81c60f81b82828151811061094e57fe5b60200101906001600160f81b031916908160001a90535060010161091e565b5095945050505050565b828054600181600116156101000203166002900490600052602060002090601f0160209004810192826109ad57600085556109f3565b82601f106109c65782800160ff198235161785556109f3565b828001600101855582156109f3579182015b828111156109f35782358255916020019190600101906109d8565b506109ff929150610a03565b5090565b5b808211156109ff5760008155600101610a04565b6020808252602a908201527f4f776e61626c65237472616e736665724f776e6572736869703a20494e56414c60408201526949445f4144445245535360b01b606082015260800190565b60208082526026908201527f4f776e61626c65236f6e6c794f776e65723a2053454e4445525f49535f4e4f546040820152652fa7aba722a960d11b60608201526080019056fea264697066735822122043a7c688116f72cb596850d51deb008249e60cf3b941bc05b64bfebfd1b8b05364736f6c63430007040033";
