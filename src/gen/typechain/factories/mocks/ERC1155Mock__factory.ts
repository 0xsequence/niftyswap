/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers'
import type { Provider, TransactionRequest } from '@ethersproject/providers'
import type { PromiseOrValue } from '../../common'
import type { ERC1155Mock, ERC1155MockInterface } from '../../mocks/ERC1155Mock'

const _abi = [
  {
    inputs: [],
    stateMutability: 'nonpayable',
    type: 'constructor'
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: '_owner',
        type: 'address'
      },
      {
        indexed: true,
        internalType: 'address',
        name: '_operator',
        type: 'address'
      },
      {
        indexed: false,
        internalType: 'bool',
        name: '_approved',
        type: 'bool'
      }
    ],
    name: 'ApprovalForAll',
    type: 'event'
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: '_operator',
        type: 'address'
      },
      {
        indexed: true,
        internalType: 'address',
        name: '_from',
        type: 'address'
      },
      {
        indexed: true,
        internalType: 'address',
        name: '_to',
        type: 'address'
      },
      {
        indexed: false,
        internalType: 'uint256[]',
        name: '_ids',
        type: 'uint256[]'
      },
      {
        indexed: false,
        internalType: 'uint256[]',
        name: '_amounts',
        type: 'uint256[]'
      }
    ],
    name: 'TransferBatch',
    type: 'event'
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: '_operator',
        type: 'address'
      },
      {
        indexed: true,
        internalType: 'address',
        name: '_from',
        type: 'address'
      },
      {
        indexed: true,
        internalType: 'address',
        name: '_to',
        type: 'address'
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: '_id',
        type: 'uint256'
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: '_amount',
        type: 'uint256'
      }
    ],
    name: 'TransferSingle',
    type: 'event'
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'string',
        name: '_uri',
        type: 'string'
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: '_id',
        type: 'uint256'
      }
    ],
    name: 'URI',
    type: 'event'
  },
  {
    stateMutability: 'nonpayable',
    type: 'fallback'
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_owner',
        type: 'address'
      },
      {
        internalType: 'uint256',
        name: '_id',
        type: 'uint256'
      }
    ],
    name: 'balanceOf',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: '_owners',
        type: 'address[]'
      },
      {
        internalType: 'uint256[]',
        name: '_ids',
        type: 'uint256[]'
      }
    ],
    name: 'balanceOfBatch',
    outputs: [
      {
        internalType: 'uint256[]',
        name: '',
        type: 'uint256[]'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [],
    name: 'baseURI',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_from',
        type: 'address'
      },
      {
        internalType: 'uint256[]',
        name: '_ids',
        type: 'uint256[]'
      },
      {
        internalType: 'uint256[]',
        name: '_values',
        type: 'uint256[]'
      }
    ],
    name: 'batchBurnMock',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_to',
        type: 'address'
      },
      {
        internalType: 'uint256[]',
        name: '_ids',
        type: 'uint256[]'
      },
      {
        internalType: 'uint256[]',
        name: '_values',
        type: 'uint256[]'
      },
      {
        internalType: 'bytes',
        name: '_data',
        type: 'bytes'
      }
    ],
    name: 'batchMintMock',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_from',
        type: 'address'
      },
      {
        internalType: 'uint256',
        name: '_id',
        type: 'uint256'
      },
      {
        internalType: 'uint256',
        name: '_value',
        type: 'uint256'
      }
    ],
    name: 'burnMock',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_owner',
        type: 'address'
      },
      {
        internalType: 'address',
        name: '_operator',
        type: 'address'
      }
    ],
    name: 'isApprovedForAll',
    outputs: [
      {
        internalType: 'bool',
        name: 'isOperator',
        type: 'bool'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_to',
        type: 'address'
      },
      {
        internalType: 'uint256',
        name: '_id',
        type: 'uint256'
      },
      {
        internalType: 'uint256',
        name: '_value',
        type: 'uint256'
      },
      {
        internalType: 'bytes',
        name: '_data',
        type: 'bytes'
      }
    ],
    name: 'mintMock',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [],
    name: 'name',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_from',
        type: 'address'
      },
      {
        internalType: 'address',
        name: '_to',
        type: 'address'
      },
      {
        internalType: 'uint256[]',
        name: '_ids',
        type: 'uint256[]'
      },
      {
        internalType: 'uint256[]',
        name: '_amounts',
        type: 'uint256[]'
      },
      {
        internalType: 'bytes',
        name: '_data',
        type: 'bytes'
      }
    ],
    name: 'safeBatchTransferFrom',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_from',
        type: 'address'
      },
      {
        internalType: 'address',
        name: '_to',
        type: 'address'
      },
      {
        internalType: 'uint256',
        name: '_id',
        type: 'uint256'
      },
      {
        internalType: 'uint256',
        name: '_amount',
        type: 'uint256'
      },
      {
        internalType: 'bytes',
        name: '_data',
        type: 'bytes'
      }
    ],
    name: 'safeTransferFrom',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_operator',
        type: 'address'
      },
      {
        internalType: 'bool',
        name: '_approved',
        type: 'bool'
      }
    ],
    name: 'setApprovalForAll',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'bytes4',
        name: '_interfaceID',
        type: 'bytes4'
      }
    ],
    name: 'supportsInterface',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool'
      }
    ],
    stateMutability: 'pure',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_id',
        type: 'uint256'
      }
    ],
    name: 'uri',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  }
] as const

const _bytecode =
  '0x60806040523480156200001157600080fd5b506040518060400160405280600b81526020016a546573744552433131353560a81b815250604051806020016040528060008152508181816003908162000059919062000118565b50600262000068828262000118565b5050505050620001e4565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200009e57607f821691505b602082108103620000bf57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200011357600081815260208120601f850160051c81016020861015620000ee5750805b601f850160051c820191505b818110156200010f57828155600101620000fa565b5050505b505050565b81516001600160401b0381111562000134576200013462000073565b6200014c8162000145845462000089565b84620000c5565b602080601f8311600181146200018457600084156200016b5750858301515b600019600386901b1c1916600185901b1785556200010f565b600085815260208120601f198616915b82811015620001b55788860151825594840194600190910190840162000194565b5085821015620001d45787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b611d1d80620001f46000396000f3fe608060405234801561001057600080fd5b50600436106100e95760003560e01c80636c0360eb1161008c578063bd7a6c4111610066578063bd7a6c4114610243578063d7a0ad9014610256578063e985e9c514610269578063f242432a146102a5576100e9565b80636c0360eb14610215578063a22cb4651461021d578063a3f091f514610230576100e9565b80630e89341c116100c85780630e89341c146101ba5780632eb2c2d6146101cd578063437ecbe9146101e25780634e1273f4146101f5576100e9565b8062fdd58e1461015c57806301ffc9a71461018257806306fdde03146101a5575b60405162461bcd60e51b815260206004820152602360248201527f455243313135354d696e744275726e4d6f636b3a20494e56414c49445f4d455460448201527f484f44000000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b61016f61016a3660046113d0565b6102b8565b6040519081526020015b60405180910390f35b610195610190366004611413565b6102e1565b6040519015158152602001610179565b6101ad6102ec565b6040516101799190611480565b6101ad6101c8366004611493565b61037a565b6101e06101db3660046115f2565b6103ae565b005b6101e06101f036600461169c565b6104f7565b6102086102033660046116cf565b610507565b60405161017991906117ca565b6101ad610673565b6101e061022b3660046117dd565b610680565b6101e061023e366004611819565b6106ec565b6101e061025136600461187a565b6106fe565b6101e06102643660046118ee565b610709565b61019561027736600461197b565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b6101e06102b33660046119ae565b610715565b6001600160a01b0382166000908152602081815260408083208484529091529020545b92915050565b60006102db82610857565b600380546102f990611a13565b80601f016020809104026020016040519081016040528092919081815260200182805461032590611a13565b80156103725780601f1061034757610100808354040283529160200191610372565b820191906000526020600020905b81548152906001019060200180831161035557829003601f168201915b505050505081565b606060026103878361089b565b604051602001610398929190611a69565b6040516020818303038152906040529050919050565b336001600160a01b03861614806103e857506001600160a01b038516600090815260016020908152604080832033845290915290205460ff165b61045a5760405162461bcd60e51b815260206004820152602f60248201527f45524331313535237361666542617463685472616e7366657246726f6d3a204960448201527f4e56414c49445f4f50455241544f5200000000000000000000000000000000006064820152608401610153565b6001600160a01b0384166104d65760405162461bcd60e51b815260206004820152603060248201527f45524331313535237361666542617463685472616e7366657246726f6d3a204960448201527f4e56414c49445f524543495049454e54000000000000000000000000000000006064820152608401610153565b6104e2858585856109fb565b6104f0858585855a86610beb565b5050505050565b610502838383610d28565b505050565b606081518351146105805760405162461bcd60e51b815260206004820152602c60248201527f455243313135352362616c616e63654f6642617463683a20494e56414c49445f60448201527f41525241595f4c454e47544800000000000000000000000000000000000000006064820152608401610153565b6000835167ffffffffffffffff81111561059c5761059c6114ac565b6040519080825280602002602001820160405280156105c5578160200160208202803683370190505b50905060005b845181101561066b576000808683815181106105e9576105e9611b3f565b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020600085838151811061062557610625611b3f565b602002602001015181526020019081526020016000205482828151811061064e5761064e611b3f565b60209081029190910101528061066381611b6b565b9150506105cb565b509392505050565b600280546102f990611a13565b3360008181526001602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6106f884848484610dac565b50505050565b610502838383610e3a565b6106f884848484610fab565b336001600160a01b038616148061074f57506001600160a01b038516600090815260016020908152604080832033845290915290205460ff165b6107c15760405162461bcd60e51b815260206004820152602a60248201527f4552433131353523736166655472616e7366657246726f6d3a20494e56414c4960448201527f445f4f50455241544f52000000000000000000000000000000000000000000006064820152608401610153565b6001600160a01b03841661083d5760405162461bcd60e51b815260206004820152602b60248201527f4552433131353523736166655472616e7366657246726f6d3a20494e56414c4960448201527f445f524543495049454e540000000000000000000000000000000000000000006064820152608401610153565b61084985858585611126565b6104f0858585855a866111da565b60007ff176cbe4000000000000000000000000000000000000000000000000000000006001600160e01b031983160161089257506001919050565b6102db8261130d565b6060816000036108de57505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b811561090857806108f281611b6b565b91506109019050600a83611b84565b91506108e2565b60008167ffffffffffffffff811115610923576109236114ac565b6040519080825280601f01601f19166020018201604052801561094d576020820181803683370190505b509050815b85156109f257610963600182611ba6565b90506000610972600a88611b84565b61097d90600a611bb9565b6109879088611ba6565b610992906030611bd8565b905060008160f81b9050808484815181106109af576109af611b3f565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506109e9600a89611b84565b97505050610952565b50949350505050565b8051825114610a725760405162461bcd60e51b815260206004820152603560248201527f45524331313535235f7361666542617463685472616e7366657246726f6d3a2060448201527f494e56414c49445f4152524159535f4c454e47544800000000000000000000006064820152608401610153565b815160005b81811015610b8c57828181518110610a9157610a91611b3f565b6020026020010151600080886001600160a01b03166001600160a01b031681526020019081526020016000206000868481518110610ad157610ad1611b3f565b602002602001015181526020019081526020016000206000828254610af69190611ba6565b92505081905550828181518110610b0f57610b0f611b3f565b6020026020010151600080876001600160a01b03166001600160a01b031681526020019081526020016000206000868481518110610b4f57610b4f611b3f565b602002602001015181526020019081526020016000206000828254610b749190611bf1565b90915550819050610b8481611b6b565b915050610a77565b50836001600160a01b0316856001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8686604051610bdc929190611c04565b60405180910390a45050505050565b610bfd856001600160a01b031661137a565b15610d20576000856001600160a01b031663bc197c8184338a8989886040518763ffffffff1660e01b8152600401610c39959493929190611c29565b60206040518083038160008887f1158015610c58573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610c7d9190611c87565b90506001600160e01b031981167fbc197c810000000000000000000000000000000000000000000000000000000014610d1e5760405162461bcd60e51b815260206004820152603f60248201527f45524331313535235f63616c6c6f6e455243313135354261746368526563656960448201527f7665643a20494e56414c49445f4f4e5f524543454956455f4d455353414745006064820152608401610153565b505b505050505050565b6001600160a01b03831660009081526020818152604080832085845290915281208054839290610d59908490611ba6565b909155505060408051838152602081018390526000916001600160a01b0386169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4505050565b6001600160a01b03841660009081526020818152604080832086845290915281208054849290610ddd908490611bf1565b909155505060408051848152602081018490526001600160a01b0386169160009133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46106f860008585855a866111da565b815181518114610eb25760405162461bcd60e51b815260206004820152603060248201527f455243313135354d696e744275726e2362617463684275726e3a20494e56414c60448201527f49445f4152524159535f4c454e475448000000000000000000000000000000006064820152608401610153565b60005b81811015610f4c57828181518110610ecf57610ecf611b3f565b6020026020010151600080876001600160a01b03166001600160a01b031681526020019081526020016000206000868481518110610f0f57610f0f611b3f565b602002602001015181526020019081526020016000206000828254610f349190611ba6565b90915550819050610f4481611b6b565b915050610eb5565b5060006001600160a01b0316846001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8686604051610f9d929190611c04565b60405180910390a450505050565b81518351146110225760405162461bcd60e51b815260206004820152603060248201527f455243313135354d696e744275726e2362617463684d696e743a20494e56414c60448201527f49445f4152524159535f4c454e475448000000000000000000000000000000006064820152608401610153565b825160005b818110156110be5783818151811061104157611041611b3f565b6020026020010151600080886001600160a01b03166001600160a01b03168152602001908152602001600020600087848151811061108157611081611b3f565b6020026020010151815260200190815260200160002060008282546110a69190611bf1565b909155508190506110b681611b6b565b915050611027565b50846001600160a01b031660006001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb878760405161110f929190611c04565b60405180910390a46104f060008686865a87610beb565b6001600160a01b03841660009081526020818152604080832085845290915281208054839290611157908490611ba6565b90915550506001600160a01b0383166000908152602081815260408083208584529091528120805483929061118d908490611bf1565b909155505060408051838152602081018390526001600160a01b03808616929087169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f629101610f9d565b6111ec856001600160a01b031661137a565b15610d20576000856001600160a01b031663f23a6e6184338a8989886040518763ffffffff1660e01b8152600401611228959493929190611ca4565b60206040518083038160008887f1158015611247573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061126c9190611c87565b90506001600160e01b031981167ff23a6e610000000000000000000000000000000000000000000000000000000014610d1e5760405162461bcd60e51b815260206004820152603a60248201527f45524331313535235f63616c6c6f6e4552433131353552656365697665643a2060448201527f494e56414c49445f4f4e5f524543454956455f4d4553534147450000000000006064820152608401610153565b60007f264985da000000000000000000000000000000000000000000000000000000006001600160e01b031983160161134857506001919050565b7f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b03198316146102db565b6000813f80158015906113ad57507fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4708114155b9392505050565b80356001600160a01b03811681146113cb57600080fd5b919050565b600080604083850312156113e357600080fd5b6113ec836113b4565b946020939093013593505050565b6001600160e01b03198116811461141057600080fd5b50565b60006020828403121561142557600080fd5b81356113ad816113fa565b60005b8381101561144b578181015183820152602001611433565b50506000910152565b6000815180845261146c816020860160208601611430565b601f01601f19169290920160200192915050565b6020815260006113ad6020830184611454565b6000602082840312156114a557600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156114eb576114eb6114ac565b604052919050565b600067ffffffffffffffff82111561150d5761150d6114ac565b5060051b60200190565b600082601f83011261152857600080fd5b8135602061153d611538836114f3565b6114c2565b82815260059290921b8401810191818101908684111561155c57600080fd5b8286015b848110156115775780358352918301918301611560565b509695505050505050565b600082601f83011261159357600080fd5b813567ffffffffffffffff8111156115ad576115ad6114ac565b6115c0601f8201601f19166020016114c2565b8181528460208386010111156115d557600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a0868803121561160a57600080fd5b611613866113b4565b9450611621602087016113b4565b9350604086013567ffffffffffffffff8082111561163e57600080fd5b61164a89838a01611517565b9450606088013591508082111561166057600080fd5b61166c89838a01611517565b9350608088013591508082111561168257600080fd5b5061168f88828901611582565b9150509295509295909350565b6000806000606084860312156116b157600080fd5b6116ba846113b4565b95602085013595506040909401359392505050565b600080604083850312156116e257600080fd5b823567ffffffffffffffff808211156116fa57600080fd5b818501915085601f83011261170e57600080fd5b8135602061171e611538836114f3565b82815260059290921b8401810191818101908984111561173d57600080fd5b948201945b8386101561176257611753866113b4565b82529482019490820190611742565b9650508601359250508082111561177857600080fd5b5061178585828601611517565b9150509250929050565b600081518084526020808501945080840160005b838110156117bf578151875295820195908201906001016117a3565b509495945050505050565b6020815260006113ad602083018461178f565b600080604083850312156117f057600080fd5b6117f9836113b4565b91506020830135801515811461180e57600080fd5b809150509250929050565b6000806000806080858703121561182f57600080fd5b611838856113b4565b93506020850135925060408501359150606085013567ffffffffffffffff81111561186257600080fd5b61186e87828801611582565b91505092959194509250565b60008060006060848603121561188f57600080fd5b611898846113b4565b9250602084013567ffffffffffffffff808211156118b557600080fd5b6118c187838801611517565b935060408601359150808211156118d757600080fd5b506118e486828701611517565b9150509250925092565b6000806000806080858703121561190457600080fd5b61190d856113b4565b9350602085013567ffffffffffffffff8082111561192a57600080fd5b61193688838901611517565b9450604087013591508082111561194c57600080fd5b61195888838901611517565b9350606087013591508082111561196e57600080fd5b5061186e87828801611582565b6000806040838503121561198e57600080fd5b611997836113b4565b91506119a5602084016113b4565b90509250929050565b600080600080600060a086880312156119c657600080fd5b6119cf866113b4565b94506119dd602087016113b4565b93506040860135925060608601359150608086013567ffffffffffffffff811115611a0757600080fd5b61168f88828901611582565b600181811c90821680611a2757607f821691505b602082108103611a4757634e487b7160e01b600052602260045260246000fd5b50919050565b60008151611a5f818560208601611430565b9290920192915050565b600080845481600182811c915080831680611a8557607f831692505b60208084108203611aa457634e487b7160e01b86526022600452602486fd5b818015611ab85760018114611acd57611afa565b60ff1986168952841515850289019650611afa565b60008b81526020902060005b86811015611af25781548b820152908501908301611ad9565b505084890196505b505050505050611b36611b0d8286611a4d565b7f2e6a736f6e000000000000000000000000000000000000000000000000000000815260050190565b95945050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201611b7d57611b7d611b55565b5060010190565b600082611ba157634e487b7160e01b600052601260045260246000fd5b500490565b818103818111156102db576102db611b55565b6000816000190483118215151615611bd357611bd3611b55565b500290565b60ff81811683821601908111156102db576102db611b55565b808201808211156102db576102db611b55565b604081526000611c17604083018561178f565b8281036020840152611b36818561178f565b60006001600160a01b03808816835280871660208401525060a06040830152611c5560a083018661178f565b8281036060840152611c67818661178f565b90508281036080840152611c7b8185611454565b98975050505050505050565b600060208284031215611c9957600080fd5b81516113ad816113fa565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a06080830152611cdc60a0830184611454565b97965050505050505056fea26469706673582212200ec2a12f995b0e3a754502b26c6f428fc105c36326ea354152a4a382e4363f4564736f6c63430008100033'

type ERC1155MockConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (xs: ERC1155MockConstructorParams): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1

export class ERC1155Mock__factory extends ContractFactory {
  constructor(...args: ERC1155MockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args)
    } else {
      super(_abi, _bytecode, args[0])
    }
  }

  override deploy(overrides?: Overrides & { from?: PromiseOrValue<string> }): Promise<ERC1155Mock> {
    return super.deploy(overrides || {}) as Promise<ERC1155Mock>
  }
  override getDeployTransaction(overrides?: Overrides & { from?: PromiseOrValue<string> }): TransactionRequest {
    return super.getDeployTransaction(overrides || {})
  }
  override attach(address: string): ERC1155Mock {
    return super.attach(address) as ERC1155Mock
  }
  override connect(signer: Signer): ERC1155Mock__factory {
    return super.connect(signer) as ERC1155Mock__factory
  }

  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): ERC1155MockInterface {
    return new utils.Interface(_abi) as ERC1155MockInterface
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ERC1155Mock {
    return new Contract(address, _abi, signerOrProvider) as ERC1155Mock
  }
}
