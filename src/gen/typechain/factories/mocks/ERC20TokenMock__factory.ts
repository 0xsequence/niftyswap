/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers'
import type { Provider, TransactionRequest } from '@ethersproject/providers'
import type { PromiseOrValue } from '../../common'
import type { ERC20TokenMock, ERC20TokenMockInterface } from '../../mocks/ERC20TokenMock'

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address'
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'spender',
        type: 'address'
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256'
      }
    ],
    name: 'Approval',
    type: 'event'
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address'
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'to',
        type: 'address'
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256'
      }
    ],
    name: 'Transfer',
    type: 'event'
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address'
      },
      {
        internalType: 'address',
        name: 'spender',
        type: 'address'
      }
    ],
    name: 'allowance',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address'
      },
      {
        internalType: 'uint256',
        name: 'value',
        type: 'uint256'
      }
    ],
    name: 'approve',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool'
      }
    ],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address'
      }
    ],
    name: 'balanceOf',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address'
      },
      {
        internalType: 'uint256',
        name: 'subtractedValue',
        type: 'uint256'
      }
    ],
    name: 'decreaseAllowance',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool'
      }
    ],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address'
      },
      {
        internalType: 'uint256',
        name: 'addedValue',
        type: 'uint256'
      }
    ],
    name: 'increaseAllowance',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool'
      }
    ],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_address',
        type: 'address'
      },
      {
        internalType: 'uint256',
        name: '_amount',
        type: 'uint256'
      }
    ],
    name: 'mockMint',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [],
    name: 'totalSupply',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'to',
        type: 'address'
      },
      {
        internalType: 'uint256',
        name: 'value',
        type: 'uint256'
      }
    ],
    name: 'transfer',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool'
      }
    ],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address'
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address'
      },
      {
        internalType: 'uint256',
        name: 'value',
        type: 'uint256'
      }
    ],
    name: 'transferFrom',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool'
      }
    ],
    stateMutability: 'nonpayable',
    type: 'function'
  }
] as const

const _bytecode =
  '0x608060405234801561001057600080fd5b506105d1806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a35760003560e01c80633950935111610076578063a457c2d71161005b578063a457c2d714610146578063a9059cbb14610159578063dd62ed3e1461016c57600080fd5b8063395093511461010a57806370a082311461011d57600080fd5b8063095ea7b3146100a857806318160ddd146100d057806323b872dd146100e2578063378934b4146100f5575b600080fd5b6100bb6100b636600461048b565b6101a5565b60405190151581526020015b60405180910390f35b6002545b6040519081526020016100c7565b6100bb6100f03660046104b5565b6101bc565b61010861010336600461048b565b61020e565b005b6100bb61011836600461048b565b61021c565b6100d461012b3660046104f1565b6001600160a01b031660009081526020819052604090205490565b6100bb61015436600461048b565b610253565b6100bb61016736600461048b565b61028a565b6100d461017a366004610513565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60006101b2338484610297565b5060015b92915050565b60006101c984848461031f565b6001600160a01b0384166000908152600160209081526040808320338085529252909120546102049186916101ff908690610575565b610297565b5060019392505050565b61021882826103d3565b5050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916101b29185906101ff908690610588565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916101b29185906101ff908690610575565b60006101b233848461031f565b6001600160a01b0382166102aa57600080fd5b6001600160a01b0383166102bd57600080fd5b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b03821661033257600080fd5b6001600160a01b0383166000908152602081905260408120805483929061035a908490610575565b90915550506001600160a01b03821660009081526020819052604081208054839290610387908490610588565b92505081905550816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161031291815260200190565b6001600160a01b0382166103e657600080fd5b80600260008282546103f89190610588565b90915550506001600160a01b03821660009081526020819052604081208054839290610425908490610588565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b80356001600160a01b038116811461048657600080fd5b919050565b6000806040838503121561049e57600080fd5b6104a78361046f565b946020939093013593505050565b6000806000606084860312156104ca57600080fd5b6104d38461046f565b92506104e16020850161046f565b9150604084013590509250925092565b60006020828403121561050357600080fd5b61050c8261046f565b9392505050565b6000806040838503121561052657600080fd5b61052f8361046f565b915061053d6020840161046f565b90509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b818103818111156101b6576101b6610546565b808201808211156101b6576101b661054656fea264697066735822122029d622578ebd05397ca629dcb34ec80465e61269e29690de391e0ad9e75d313e64736f6c63430008100033'

type ERC20TokenMockConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (xs: ERC20TokenMockConstructorParams): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1

export class ERC20TokenMock__factory extends ContractFactory {
  constructor(...args: ERC20TokenMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args)
    } else {
      super(_abi, _bytecode, args[0])
    }
  }

  override deploy(overrides?: Overrides & { from?: PromiseOrValue<string> }): Promise<ERC20TokenMock> {
    return super.deploy(overrides || {}) as Promise<ERC20TokenMock>
  }
  override getDeployTransaction(overrides?: Overrides & { from?: PromiseOrValue<string> }): TransactionRequest {
    return super.getDeployTransaction(overrides || {})
  }
  override attach(address: string): ERC20TokenMock {
    return super.attach(address) as ERC20TokenMock
  }
  override connect(signer: Signer): ERC20TokenMock__factory {
    return super.connect(signer) as ERC20TokenMock__factory
  }

  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): ERC20TokenMockInterface {
    return new utils.Interface(_abi) as ERC20TokenMockInterface
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ERC20TokenMock {
    return new Contract(address, _abi, signerOrProvider) as ERC20TokenMock
  }
}
