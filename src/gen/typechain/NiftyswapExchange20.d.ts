/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "ethers";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";
import { TypedEventFilter, TypedEvent, TypedListener } from "./commons";

interface NiftyswapExchange20Interface extends ethers.utils.Interface {
  functions: {
    "balanceOf(address,uint256)": FunctionFragment;
    "balanceOfBatch(address[],uint256[])": FunctionFragment;
    "buyTokens(uint256[],uint256[],uint256,uint256,address,address[],uint256[])": FunctionFragment;
    "changeOwnableParent(address)": FunctionFragment;
    "getBuyPrice(uint256,uint256,uint256)": FunctionFragment;
    "getBuyPriceWithRoyalty(uint256,uint256,uint256,uint256)": FunctionFragment;
    "getCurrencyInfo()": FunctionFragment;
    "getCurrencyReserves(uint256[])": FunctionFragment;
    "getFactoryAddress()": FunctionFragment;
    "getGlobalRoyaltyFee()": FunctionFragment;
    "getGlobalRoyaltyRecipient()": FunctionFragment;
    "getLPFee()": FunctionFragment;
    "getOwner()": FunctionFragment;
    "getPrice_currencyToToken(uint256[],uint256[])": FunctionFragment;
    "getPrice_tokenToCurrency(uint256[],uint256[])": FunctionFragment;
    "getRoyalties(address)": FunctionFragment;
    "getRoyaltiesNumerator(address)": FunctionFragment;
    "getRoyaltyInfo(uint256,uint256)": FunctionFragment;
    "getSellPrice(uint256,uint256,uint256)": FunctionFragment;
    "getSellPriceWithRoyalty(uint256,uint256,uint256,uint256)": FunctionFragment;
    "getTokenAddress()": FunctionFragment;
    "getTotalSupply(uint256[])": FunctionFragment;
    "isApprovedForAll(address,address)": FunctionFragment;
    "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": FunctionFragment;
    "onERC1155Received(address,address,uint256,uint256,bytes)": FunctionFragment;
    "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": FunctionFragment;
    "safeTransferFrom(address,address,uint256,uint256,bytes)": FunctionFragment;
    "sendRoyalties(address)": FunctionFragment;
    "setApprovalForAll(address,bool)": FunctionFragment;
    "setRoyaltyInfo(uint256,address)": FunctionFragment;
    "supportsInterface(bytes4)": FunctionFragment;
    "uri(uint256)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "balanceOf",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "balanceOfBatch",
    values: [string[], BigNumberish[]]
  ): string;
  encodeFunctionData(
    functionFragment: "buyTokens",
    values: [
      BigNumberish[],
      BigNumberish[],
      BigNumberish,
      BigNumberish,
      string,
      string[],
      BigNumberish[]
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "changeOwnableParent",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "getBuyPrice",
    values: [BigNumberish, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getBuyPriceWithRoyalty",
    values: [BigNumberish, BigNumberish, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getCurrencyInfo",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getCurrencyReserves",
    values: [BigNumberish[]]
  ): string;
  encodeFunctionData(
    functionFragment: "getFactoryAddress",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getGlobalRoyaltyFee",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getGlobalRoyaltyRecipient",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "getLPFee", values?: undefined): string;
  encodeFunctionData(functionFragment: "getOwner", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "getPrice_currencyToToken",
    values: [BigNumberish[], BigNumberish[]]
  ): string;
  encodeFunctionData(
    functionFragment: "getPrice_tokenToCurrency",
    values: [BigNumberish[], BigNumberish[]]
  ): string;
  encodeFunctionData(
    functionFragment: "getRoyalties",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "getRoyaltiesNumerator",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "getRoyaltyInfo",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getSellPrice",
    values: [BigNumberish, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getSellPriceWithRoyalty",
    values: [BigNumberish, BigNumberish, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getTokenAddress",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getTotalSupply",
    values: [BigNumberish[]]
  ): string;
  encodeFunctionData(
    functionFragment: "isApprovedForAll",
    values: [string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "onERC1155BatchReceived",
    values: [string, string, BigNumberish[], BigNumberish[], BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "onERC1155Received",
    values: [string, string, BigNumberish, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "safeBatchTransferFrom",
    values: [string, string, BigNumberish[], BigNumberish[], BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "safeTransferFrom",
    values: [string, string, BigNumberish, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "sendRoyalties",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "setApprovalForAll",
    values: [string, boolean]
  ): string;
  encodeFunctionData(
    functionFragment: "setRoyaltyInfo",
    values: [BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "supportsInterface",
    values: [BytesLike]
  ): string;
  encodeFunctionData(functionFragment: "uri", values: [BigNumberish]): string;

  decodeFunctionResult(functionFragment: "balanceOf", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "balanceOfBatch",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "buyTokens", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "changeOwnableParent",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getBuyPrice",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getBuyPriceWithRoyalty",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getCurrencyInfo",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getCurrencyReserves",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getFactoryAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getGlobalRoyaltyFee",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getGlobalRoyaltyRecipient",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getLPFee", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "getOwner", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getPrice_currencyToToken",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getPrice_tokenToCurrency",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getRoyalties",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getRoyaltiesNumerator",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getRoyaltyInfo",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getSellPrice",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getSellPriceWithRoyalty",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getTokenAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getTotalSupply",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isApprovedForAll",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "onERC1155BatchReceived",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "onERC1155Received",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "safeBatchTransferFrom",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "safeTransferFrom",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "sendRoyalties",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setApprovalForAll",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setRoyaltyInfo",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "supportsInterface",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "uri", data: BytesLike): Result;

  events: {
    "ApprovalForAll(address,address,bool)": EventFragment;
    "CurrencyPurchase(address,address,uint256[],uint256[],uint256[],address[],uint256[])": EventFragment;
    "LiquidityAdded(address,uint256[],uint256[],uint256[])": EventFragment;
    "LiquidityRemoved(address,uint256[],uint256[],tuple[])": EventFragment;
    "ParentOwnerChanged(address,address)": EventFragment;
    "RoyaltyChanged(address,uint256)": EventFragment;
    "TokensPurchase(address,address,uint256[],uint256[],uint256[],address[],uint256[])": EventFragment;
    "TransferBatch(address,address,address,uint256[],uint256[])": EventFragment;
    "TransferSingle(address,address,address,uint256,uint256)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "ApprovalForAll"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "CurrencyPurchase"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "LiquidityAdded"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "LiquidityRemoved"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ParentOwnerChanged"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "RoyaltyChanged"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "TokensPurchase"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "TransferBatch"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "TransferSingle"): EventFragment;
}

export class NiftyswapExchange20 extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  listeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter?: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): Array<TypedListener<EventArgsArray, EventArgsObject>>;
  off<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  on<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  once<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeListener<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeAllListeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): this;

  listeners(eventName?: string): Array<Listener>;
  off(eventName: string, listener: Listener): this;
  on(eventName: string, listener: Listener): this;
  once(eventName: string, listener: Listener): this;
  removeListener(eventName: string, listener: Listener): this;
  removeAllListeners(eventName?: string): this;

  queryFilter<EventArgsArray extends Array<any>, EventArgsObject>(
    event: TypedEventFilter<EventArgsArray, EventArgsObject>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEvent<EventArgsArray & EventArgsObject>>>;

  interface: NiftyswapExchange20Interface;

  functions: {
    balanceOf(
      _owner: string,
      _id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "balanceOf(address,uint256)"(
      _owner: string,
      _id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    balanceOfBatch(
      _owners: string[],
      _ids: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<[BigNumber[]]>;

    "balanceOfBatch(address[],uint256[])"(
      _owners: string[],
      _ids: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<[BigNumber[]]>;

    buyTokens(
      _tokenIds: BigNumberish[],
      _tokensBoughtAmounts: BigNumberish[],
      _maxCurrency: BigNumberish,
      _deadline: BigNumberish,
      _recipient: string,
      _extraFeeRecipients: string[],
      _extraFeeAmounts: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "buyTokens(uint256[],uint256[],uint256,uint256,address,address[],uint256[])"(
      _tokenIds: BigNumberish[],
      _tokensBoughtAmounts: BigNumberish[],
      _maxCurrency: BigNumberish,
      _deadline: BigNumberish,
      _recipient: string,
      _extraFeeRecipients: string[],
      _extraFeeAmounts: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    changeOwnableParent(
      _newParent: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "changeOwnableParent(address)"(
      _newParent: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    getBuyPrice(
      _assetBoughtAmount: BigNumberish,
      _assetSoldReserve: BigNumberish,
      _assetBoughtReserve: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { price: BigNumber }>;

    "getBuyPrice(uint256,uint256,uint256)"(
      _assetBoughtAmount: BigNumberish,
      _assetSoldReserve: BigNumberish,
      _assetBoughtReserve: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { price: BigNumber }>;

    getBuyPriceWithRoyalty(
      _tokenId: BigNumberish,
      _assetBoughtAmount: BigNumberish,
      _assetSoldReserve: BigNumberish,
      _assetBoughtReserve: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { price: BigNumber }>;

    "getBuyPriceWithRoyalty(uint256,uint256,uint256,uint256)"(
      _tokenId: BigNumberish,
      _assetBoughtAmount: BigNumberish,
      _assetSoldReserve: BigNumberish,
      _assetBoughtReserve: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { price: BigNumber }>;

    getCurrencyInfo(overrides?: CallOverrides): Promise<[string]>;

    "getCurrencyInfo()"(overrides?: CallOverrides): Promise<[string]>;

    getCurrencyReserves(
      _ids: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<[BigNumber[]]>;

    "getCurrencyReserves(uint256[])"(
      _ids: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<[BigNumber[]]>;

    getFactoryAddress(overrides?: CallOverrides): Promise<[string]>;

    "getFactoryAddress()"(overrides?: CallOverrides): Promise<[string]>;

    getGlobalRoyaltyFee(overrides?: CallOverrides): Promise<[BigNumber]>;

    "getGlobalRoyaltyFee()"(overrides?: CallOverrides): Promise<[BigNumber]>;

    getGlobalRoyaltyRecipient(overrides?: CallOverrides): Promise<[string]>;

    "getGlobalRoyaltyRecipient()"(overrides?: CallOverrides): Promise<[string]>;

    getLPFee(overrides?: CallOverrides): Promise<[BigNumber]>;

    "getLPFee()"(overrides?: CallOverrides): Promise<[BigNumber]>;

    getOwner(overrides?: CallOverrides): Promise<[string]>;

    "getOwner()"(overrides?: CallOverrides): Promise<[string]>;

    getPrice_currencyToToken(
      _ids: BigNumberish[],
      _tokensBought: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<[BigNumber[]]>;

    "getPrice_currencyToToken(uint256[],uint256[])"(
      _ids: BigNumberish[],
      _tokensBought: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<[BigNumber[]]>;

    getPrice_tokenToCurrency(
      _ids: BigNumberish[],
      _tokensSold: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<[BigNumber[]]>;

    "getPrice_tokenToCurrency(uint256[],uint256[])"(
      _ids: BigNumberish[],
      _tokensSold: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<[BigNumber[]]>;

    getRoyalties(
      _royaltyRecipient: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "getRoyalties(address)"(
      _royaltyRecipient: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getRoyaltiesNumerator(
      _royaltyRecipient: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "getRoyaltiesNumerator(address)"(
      _royaltyRecipient: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getRoyaltyInfo(
      _tokenId: BigNumberish,
      _cost: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string, BigNumber] & { recipient: string; royalty: BigNumber }>;

    "getRoyaltyInfo(uint256,uint256)"(
      _tokenId: BigNumberish,
      _cost: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string, BigNumber] & { recipient: string; royalty: BigNumber }>;

    getSellPrice(
      _assetSoldAmount: BigNumberish,
      _assetSoldReserve: BigNumberish,
      _assetBoughtReserve: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { price: BigNumber }>;

    "getSellPrice(uint256,uint256,uint256)"(
      _assetSoldAmount: BigNumberish,
      _assetSoldReserve: BigNumberish,
      _assetBoughtReserve: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { price: BigNumber }>;

    getSellPriceWithRoyalty(
      _tokenId: BigNumberish,
      _assetSoldAmount: BigNumberish,
      _assetSoldReserve: BigNumberish,
      _assetBoughtReserve: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { price: BigNumber }>;

    "getSellPriceWithRoyalty(uint256,uint256,uint256,uint256)"(
      _tokenId: BigNumberish,
      _assetSoldAmount: BigNumberish,
      _assetSoldReserve: BigNumberish,
      _assetBoughtReserve: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { price: BigNumber }>;

    getTokenAddress(overrides?: CallOverrides): Promise<[string]>;

    "getTokenAddress()"(overrides?: CallOverrides): Promise<[string]>;

    getTotalSupply(
      _ids: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<[BigNumber[]]>;

    "getTotalSupply(uint256[])"(
      _ids: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<[BigNumber[]]>;

    isApprovedForAll(
      _owner: string,
      _operator: string,
      overrides?: CallOverrides
    ): Promise<[boolean] & { isOperator: boolean }>;

    "isApprovedForAll(address,address)"(
      _owner: string,
      _operator: string,
      overrides?: CallOverrides
    ): Promise<[boolean] & { isOperator: boolean }>;

    onERC1155BatchReceived(
      arg0: string,
      _from: string,
      _ids: BigNumberish[],
      _amounts: BigNumberish[],
      _data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"(
      arg0: string,
      _from: string,
      _ids: BigNumberish[],
      _amounts: BigNumberish[],
      _data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    onERC1155Received(
      _operator: string,
      _from: string,
      _id: BigNumberish,
      _amount: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "onERC1155Received(address,address,uint256,uint256,bytes)"(
      _operator: string,
      _from: string,
      _id: BigNumberish,
      _amount: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    safeBatchTransferFrom(
      _from: string,
      _to: string,
      _ids: BigNumberish[],
      _amounts: BigNumberish[],
      _data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"(
      _from: string,
      _to: string,
      _ids: BigNumberish[],
      _amounts: BigNumberish[],
      _data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    safeTransferFrom(
      _from: string,
      _to: string,
      _id: BigNumberish,
      _amount: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "safeTransferFrom(address,address,uint256,uint256,bytes)"(
      _from: string,
      _to: string,
      _id: BigNumberish,
      _amount: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    sendRoyalties(
      _royaltyRecipient: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "sendRoyalties(address)"(
      _royaltyRecipient: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setApprovalForAll(
      _operator: string,
      _approved: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "setApprovalForAll(address,bool)"(
      _operator: string,
      _approved: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setRoyaltyInfo(
      _fee: BigNumberish,
      _recipient: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "setRoyaltyInfo(uint256,address)"(
      _fee: BigNumberish,
      _recipient: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    supportsInterface(
      interfaceID: BytesLike,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    "supportsInterface(bytes4)"(
      interfaceID: BytesLike,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    uri(_id: BigNumberish, overrides?: CallOverrides): Promise<[string]>;

    "uri(uint256)"(
      _id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;
  };

  balanceOf(
    _owner: string,
    _id: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "balanceOf(address,uint256)"(
    _owner: string,
    _id: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  balanceOfBatch(
    _owners: string[],
    _ids: BigNumberish[],
    overrides?: CallOverrides
  ): Promise<BigNumber[]>;

  "balanceOfBatch(address[],uint256[])"(
    _owners: string[],
    _ids: BigNumberish[],
    overrides?: CallOverrides
  ): Promise<BigNumber[]>;

  buyTokens(
    _tokenIds: BigNumberish[],
    _tokensBoughtAmounts: BigNumberish[],
    _maxCurrency: BigNumberish,
    _deadline: BigNumberish,
    _recipient: string,
    _extraFeeRecipients: string[],
    _extraFeeAmounts: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "buyTokens(uint256[],uint256[],uint256,uint256,address,address[],uint256[])"(
    _tokenIds: BigNumberish[],
    _tokensBoughtAmounts: BigNumberish[],
    _maxCurrency: BigNumberish,
    _deadline: BigNumberish,
    _recipient: string,
    _extraFeeRecipients: string[],
    _extraFeeAmounts: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  changeOwnableParent(
    _newParent: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "changeOwnableParent(address)"(
    _newParent: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  getBuyPrice(
    _assetBoughtAmount: BigNumberish,
    _assetSoldReserve: BigNumberish,
    _assetBoughtReserve: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getBuyPrice(uint256,uint256,uint256)"(
    _assetBoughtAmount: BigNumberish,
    _assetSoldReserve: BigNumberish,
    _assetBoughtReserve: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getBuyPriceWithRoyalty(
    _tokenId: BigNumberish,
    _assetBoughtAmount: BigNumberish,
    _assetSoldReserve: BigNumberish,
    _assetBoughtReserve: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getBuyPriceWithRoyalty(uint256,uint256,uint256,uint256)"(
    _tokenId: BigNumberish,
    _assetBoughtAmount: BigNumberish,
    _assetSoldReserve: BigNumberish,
    _assetBoughtReserve: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getCurrencyInfo(overrides?: CallOverrides): Promise<string>;

  "getCurrencyInfo()"(overrides?: CallOverrides): Promise<string>;

  getCurrencyReserves(
    _ids: BigNumberish[],
    overrides?: CallOverrides
  ): Promise<BigNumber[]>;

  "getCurrencyReserves(uint256[])"(
    _ids: BigNumberish[],
    overrides?: CallOverrides
  ): Promise<BigNumber[]>;

  getFactoryAddress(overrides?: CallOverrides): Promise<string>;

  "getFactoryAddress()"(overrides?: CallOverrides): Promise<string>;

  getGlobalRoyaltyFee(overrides?: CallOverrides): Promise<BigNumber>;

  "getGlobalRoyaltyFee()"(overrides?: CallOverrides): Promise<BigNumber>;

  getGlobalRoyaltyRecipient(overrides?: CallOverrides): Promise<string>;

  "getGlobalRoyaltyRecipient()"(overrides?: CallOverrides): Promise<string>;

  getLPFee(overrides?: CallOverrides): Promise<BigNumber>;

  "getLPFee()"(overrides?: CallOverrides): Promise<BigNumber>;

  getOwner(overrides?: CallOverrides): Promise<string>;

  "getOwner()"(overrides?: CallOverrides): Promise<string>;

  getPrice_currencyToToken(
    _ids: BigNumberish[],
    _tokensBought: BigNumberish[],
    overrides?: CallOverrides
  ): Promise<BigNumber[]>;

  "getPrice_currencyToToken(uint256[],uint256[])"(
    _ids: BigNumberish[],
    _tokensBought: BigNumberish[],
    overrides?: CallOverrides
  ): Promise<BigNumber[]>;

  getPrice_tokenToCurrency(
    _ids: BigNumberish[],
    _tokensSold: BigNumberish[],
    overrides?: CallOverrides
  ): Promise<BigNumber[]>;

  "getPrice_tokenToCurrency(uint256[],uint256[])"(
    _ids: BigNumberish[],
    _tokensSold: BigNumberish[],
    overrides?: CallOverrides
  ): Promise<BigNumber[]>;

  getRoyalties(
    _royaltyRecipient: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getRoyalties(address)"(
    _royaltyRecipient: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getRoyaltiesNumerator(
    _royaltyRecipient: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getRoyaltiesNumerator(address)"(
    _royaltyRecipient: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getRoyaltyInfo(
    _tokenId: BigNumberish,
    _cost: BigNumberish,
    overrides?: CallOverrides
  ): Promise<[string, BigNumber] & { recipient: string; royalty: BigNumber }>;

  "getRoyaltyInfo(uint256,uint256)"(
    _tokenId: BigNumberish,
    _cost: BigNumberish,
    overrides?: CallOverrides
  ): Promise<[string, BigNumber] & { recipient: string; royalty: BigNumber }>;

  getSellPrice(
    _assetSoldAmount: BigNumberish,
    _assetSoldReserve: BigNumberish,
    _assetBoughtReserve: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getSellPrice(uint256,uint256,uint256)"(
    _assetSoldAmount: BigNumberish,
    _assetSoldReserve: BigNumberish,
    _assetBoughtReserve: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getSellPriceWithRoyalty(
    _tokenId: BigNumberish,
    _assetSoldAmount: BigNumberish,
    _assetSoldReserve: BigNumberish,
    _assetBoughtReserve: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getSellPriceWithRoyalty(uint256,uint256,uint256,uint256)"(
    _tokenId: BigNumberish,
    _assetSoldAmount: BigNumberish,
    _assetSoldReserve: BigNumberish,
    _assetBoughtReserve: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getTokenAddress(overrides?: CallOverrides): Promise<string>;

  "getTokenAddress()"(overrides?: CallOverrides): Promise<string>;

  getTotalSupply(
    _ids: BigNumberish[],
    overrides?: CallOverrides
  ): Promise<BigNumber[]>;

  "getTotalSupply(uint256[])"(
    _ids: BigNumberish[],
    overrides?: CallOverrides
  ): Promise<BigNumber[]>;

  isApprovedForAll(
    _owner: string,
    _operator: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "isApprovedForAll(address,address)"(
    _owner: string,
    _operator: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  onERC1155BatchReceived(
    arg0: string,
    _from: string,
    _ids: BigNumberish[],
    _amounts: BigNumberish[],
    _data: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"(
    arg0: string,
    _from: string,
    _ids: BigNumberish[],
    _amounts: BigNumberish[],
    _data: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  onERC1155Received(
    _operator: string,
    _from: string,
    _id: BigNumberish,
    _amount: BigNumberish,
    _data: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "onERC1155Received(address,address,uint256,uint256,bytes)"(
    _operator: string,
    _from: string,
    _id: BigNumberish,
    _amount: BigNumberish,
    _data: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  safeBatchTransferFrom(
    _from: string,
    _to: string,
    _ids: BigNumberish[],
    _amounts: BigNumberish[],
    _data: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"(
    _from: string,
    _to: string,
    _ids: BigNumberish[],
    _amounts: BigNumberish[],
    _data: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  safeTransferFrom(
    _from: string,
    _to: string,
    _id: BigNumberish,
    _amount: BigNumberish,
    _data: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "safeTransferFrom(address,address,uint256,uint256,bytes)"(
    _from: string,
    _to: string,
    _id: BigNumberish,
    _amount: BigNumberish,
    _data: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  sendRoyalties(
    _royaltyRecipient: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "sendRoyalties(address)"(
    _royaltyRecipient: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setApprovalForAll(
    _operator: string,
    _approved: boolean,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "setApprovalForAll(address,bool)"(
    _operator: string,
    _approved: boolean,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setRoyaltyInfo(
    _fee: BigNumberish,
    _recipient: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "setRoyaltyInfo(uint256,address)"(
    _fee: BigNumberish,
    _recipient: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  supportsInterface(
    interfaceID: BytesLike,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "supportsInterface(bytes4)"(
    interfaceID: BytesLike,
    overrides?: CallOverrides
  ): Promise<boolean>;

  uri(_id: BigNumberish, overrides?: CallOverrides): Promise<string>;

  "uri(uint256)"(_id: BigNumberish, overrides?: CallOverrides): Promise<string>;

  callStatic: {
    balanceOf(
      _owner: string,
      _id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "balanceOf(address,uint256)"(
      _owner: string,
      _id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    balanceOfBatch(
      _owners: string[],
      _ids: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    "balanceOfBatch(address[],uint256[])"(
      _owners: string[],
      _ids: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    buyTokens(
      _tokenIds: BigNumberish[],
      _tokensBoughtAmounts: BigNumberish[],
      _maxCurrency: BigNumberish,
      _deadline: BigNumberish,
      _recipient: string,
      _extraFeeRecipients: string[],
      _extraFeeAmounts: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    "buyTokens(uint256[],uint256[],uint256,uint256,address,address[],uint256[])"(
      _tokenIds: BigNumberish[],
      _tokensBoughtAmounts: BigNumberish[],
      _maxCurrency: BigNumberish,
      _deadline: BigNumberish,
      _recipient: string,
      _extraFeeRecipients: string[],
      _extraFeeAmounts: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    changeOwnableParent(
      _newParent: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "changeOwnableParent(address)"(
      _newParent: string,
      overrides?: CallOverrides
    ): Promise<void>;

    getBuyPrice(
      _assetBoughtAmount: BigNumberish,
      _assetSoldReserve: BigNumberish,
      _assetBoughtReserve: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getBuyPrice(uint256,uint256,uint256)"(
      _assetBoughtAmount: BigNumberish,
      _assetSoldReserve: BigNumberish,
      _assetBoughtReserve: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getBuyPriceWithRoyalty(
      _tokenId: BigNumberish,
      _assetBoughtAmount: BigNumberish,
      _assetSoldReserve: BigNumberish,
      _assetBoughtReserve: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getBuyPriceWithRoyalty(uint256,uint256,uint256,uint256)"(
      _tokenId: BigNumberish,
      _assetBoughtAmount: BigNumberish,
      _assetSoldReserve: BigNumberish,
      _assetBoughtReserve: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getCurrencyInfo(overrides?: CallOverrides): Promise<string>;

    "getCurrencyInfo()"(overrides?: CallOverrides): Promise<string>;

    getCurrencyReserves(
      _ids: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    "getCurrencyReserves(uint256[])"(
      _ids: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    getFactoryAddress(overrides?: CallOverrides): Promise<string>;

    "getFactoryAddress()"(overrides?: CallOverrides): Promise<string>;

    getGlobalRoyaltyFee(overrides?: CallOverrides): Promise<BigNumber>;

    "getGlobalRoyaltyFee()"(overrides?: CallOverrides): Promise<BigNumber>;

    getGlobalRoyaltyRecipient(overrides?: CallOverrides): Promise<string>;

    "getGlobalRoyaltyRecipient()"(overrides?: CallOverrides): Promise<string>;

    getLPFee(overrides?: CallOverrides): Promise<BigNumber>;

    "getLPFee()"(overrides?: CallOverrides): Promise<BigNumber>;

    getOwner(overrides?: CallOverrides): Promise<string>;

    "getOwner()"(overrides?: CallOverrides): Promise<string>;

    getPrice_currencyToToken(
      _ids: BigNumberish[],
      _tokensBought: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    "getPrice_currencyToToken(uint256[],uint256[])"(
      _ids: BigNumberish[],
      _tokensBought: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    getPrice_tokenToCurrency(
      _ids: BigNumberish[],
      _tokensSold: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    "getPrice_tokenToCurrency(uint256[],uint256[])"(
      _ids: BigNumberish[],
      _tokensSold: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    getRoyalties(
      _royaltyRecipient: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getRoyalties(address)"(
      _royaltyRecipient: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getRoyaltiesNumerator(
      _royaltyRecipient: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getRoyaltiesNumerator(address)"(
      _royaltyRecipient: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getRoyaltyInfo(
      _tokenId: BigNumberish,
      _cost: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string, BigNumber] & { recipient: string; royalty: BigNumber }>;

    "getRoyaltyInfo(uint256,uint256)"(
      _tokenId: BigNumberish,
      _cost: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string, BigNumber] & { recipient: string; royalty: BigNumber }>;

    getSellPrice(
      _assetSoldAmount: BigNumberish,
      _assetSoldReserve: BigNumberish,
      _assetBoughtReserve: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getSellPrice(uint256,uint256,uint256)"(
      _assetSoldAmount: BigNumberish,
      _assetSoldReserve: BigNumberish,
      _assetBoughtReserve: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getSellPriceWithRoyalty(
      _tokenId: BigNumberish,
      _assetSoldAmount: BigNumberish,
      _assetSoldReserve: BigNumberish,
      _assetBoughtReserve: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getSellPriceWithRoyalty(uint256,uint256,uint256,uint256)"(
      _tokenId: BigNumberish,
      _assetSoldAmount: BigNumberish,
      _assetSoldReserve: BigNumberish,
      _assetBoughtReserve: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getTokenAddress(overrides?: CallOverrides): Promise<string>;

    "getTokenAddress()"(overrides?: CallOverrides): Promise<string>;

    getTotalSupply(
      _ids: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    "getTotalSupply(uint256[])"(
      _ids: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    isApprovedForAll(
      _owner: string,
      _operator: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "isApprovedForAll(address,address)"(
      _owner: string,
      _operator: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    onERC1155BatchReceived(
      arg0: string,
      _from: string,
      _ids: BigNumberish[],
      _amounts: BigNumberish[],
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"(
      arg0: string,
      _from: string,
      _ids: BigNumberish[],
      _amounts: BigNumberish[],
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    onERC1155Received(
      _operator: string,
      _from: string,
      _id: BigNumberish,
      _amount: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    "onERC1155Received(address,address,uint256,uint256,bytes)"(
      _operator: string,
      _from: string,
      _id: BigNumberish,
      _amount: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    safeBatchTransferFrom(
      _from: string,
      _to: string,
      _ids: BigNumberish[],
      _amounts: BigNumberish[],
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"(
      _from: string,
      _to: string,
      _ids: BigNumberish[],
      _amounts: BigNumberish[],
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    safeTransferFrom(
      _from: string,
      _to: string,
      _id: BigNumberish,
      _amount: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    "safeTransferFrom(address,address,uint256,uint256,bytes)"(
      _from: string,
      _to: string,
      _id: BigNumberish,
      _amount: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    sendRoyalties(
      _royaltyRecipient: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "sendRoyalties(address)"(
      _royaltyRecipient: string,
      overrides?: CallOverrides
    ): Promise<void>;

    setApprovalForAll(
      _operator: string,
      _approved: boolean,
      overrides?: CallOverrides
    ): Promise<void>;

    "setApprovalForAll(address,bool)"(
      _operator: string,
      _approved: boolean,
      overrides?: CallOverrides
    ): Promise<void>;

    setRoyaltyInfo(
      _fee: BigNumberish,
      _recipient: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "setRoyaltyInfo(uint256,address)"(
      _fee: BigNumberish,
      _recipient: string,
      overrides?: CallOverrides
    ): Promise<void>;

    supportsInterface(
      interfaceID: BytesLike,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "supportsInterface(bytes4)"(
      interfaceID: BytesLike,
      overrides?: CallOverrides
    ): Promise<boolean>;

    uri(_id: BigNumberish, overrides?: CallOverrides): Promise<string>;

    "uri(uint256)"(
      _id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;
  };

  filters: {
    ApprovalForAll(
      _owner: string | null,
      _operator: string | null,
      _approved: null
    ): TypedEventFilter<
      [string, string, boolean],
      { _owner: string; _operator: string; _approved: boolean }
    >;

    CurrencyPurchase(
      buyer: string | null,
      recipient: string | null,
      tokensSoldIds: null,
      tokensSoldAmounts: null,
      currencyBoughtAmounts: null,
      extraFeeRecipients: null,
      extraFeeAmounts: null
    ): TypedEventFilter<
      [
        string,
        string,
        BigNumber[],
        BigNumber[],
        BigNumber[],
        string[],
        BigNumber[]
      ],
      {
        buyer: string;
        recipient: string;
        tokensSoldIds: BigNumber[];
        tokensSoldAmounts: BigNumber[];
        currencyBoughtAmounts: BigNumber[];
        extraFeeRecipients: string[];
        extraFeeAmounts: BigNumber[];
      }
    >;

    LiquidityAdded(
      provider: string | null,
      tokenIds: null,
      tokenAmounts: null,
      currencyAmounts: null
    ): TypedEventFilter<
      [string, BigNumber[], BigNumber[], BigNumber[]],
      {
        provider: string;
        tokenIds: BigNumber[];
        tokenAmounts: BigNumber[];
        currencyAmounts: BigNumber[];
      }
    >;

    LiquidityRemoved(
      provider: string | null,
      tokenIds: null,
      tokenAmounts: null,
      details: null
    ): TypedEventFilter<
      [
        string,
        BigNumber[],
        BigNumber[],
        ([BigNumber, BigNumber, BigNumber, BigNumber] & {
          currencyAmount: BigNumber;
          soldTokenNumerator: BigNumber;
          boughtCurrencyNumerator: BigNumber;
          totalSupply: BigNumber;
        })[]
      ],
      {
        provider: string;
        tokenIds: BigNumber[];
        tokenAmounts: BigNumber[];
        details: ([BigNumber, BigNumber, BigNumber, BigNumber] & {
          currencyAmount: BigNumber;
          soldTokenNumerator: BigNumber;
          boughtCurrencyNumerator: BigNumber;
          totalSupply: BigNumber;
        })[];
      }
    >;

    ParentOwnerChanged(
      previousParent: string | null,
      newParent: string | null
    ): TypedEventFilter<
      [string, string],
      { previousParent: string; newParent: string }
    >;

    RoyaltyChanged(
      royaltyRecipient: string | null,
      royaltyFee: null
    ): TypedEventFilter<
      [string, BigNumber],
      { royaltyRecipient: string; royaltyFee: BigNumber }
    >;

    TokensPurchase(
      buyer: string | null,
      recipient: string | null,
      tokensBoughtIds: null,
      tokensBoughtAmounts: null,
      currencySoldAmounts: null,
      extraFeeRecipients: null,
      extraFeeAmounts: null
    ): TypedEventFilter<
      [
        string,
        string,
        BigNumber[],
        BigNumber[],
        BigNumber[],
        string[],
        BigNumber[]
      ],
      {
        buyer: string;
        recipient: string;
        tokensBoughtIds: BigNumber[];
        tokensBoughtAmounts: BigNumber[];
        currencySoldAmounts: BigNumber[];
        extraFeeRecipients: string[];
        extraFeeAmounts: BigNumber[];
      }
    >;

    TransferBatch(
      _operator: string | null,
      _from: string | null,
      _to: string | null,
      _ids: null,
      _amounts: null
    ): TypedEventFilter<
      [string, string, string, BigNumber[], BigNumber[]],
      {
        _operator: string;
        _from: string;
        _to: string;
        _ids: BigNumber[];
        _amounts: BigNumber[];
      }
    >;

    TransferSingle(
      _operator: string | null,
      _from: string | null,
      _to: string | null,
      _id: null,
      _amount: null
    ): TypedEventFilter<
      [string, string, string, BigNumber, BigNumber],
      {
        _operator: string;
        _from: string;
        _to: string;
        _id: BigNumber;
        _amount: BigNumber;
      }
    >;
  };

  estimateGas: {
    balanceOf(
      _owner: string,
      _id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "balanceOf(address,uint256)"(
      _owner: string,
      _id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    balanceOfBatch(
      _owners: string[],
      _ids: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "balanceOfBatch(address[],uint256[])"(
      _owners: string[],
      _ids: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    buyTokens(
      _tokenIds: BigNumberish[],
      _tokensBoughtAmounts: BigNumberish[],
      _maxCurrency: BigNumberish,
      _deadline: BigNumberish,
      _recipient: string,
      _extraFeeRecipients: string[],
      _extraFeeAmounts: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "buyTokens(uint256[],uint256[],uint256,uint256,address,address[],uint256[])"(
      _tokenIds: BigNumberish[],
      _tokensBoughtAmounts: BigNumberish[],
      _maxCurrency: BigNumberish,
      _deadline: BigNumberish,
      _recipient: string,
      _extraFeeRecipients: string[],
      _extraFeeAmounts: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    changeOwnableParent(
      _newParent: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "changeOwnableParent(address)"(
      _newParent: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    getBuyPrice(
      _assetBoughtAmount: BigNumberish,
      _assetSoldReserve: BigNumberish,
      _assetBoughtReserve: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getBuyPrice(uint256,uint256,uint256)"(
      _assetBoughtAmount: BigNumberish,
      _assetSoldReserve: BigNumberish,
      _assetBoughtReserve: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getBuyPriceWithRoyalty(
      _tokenId: BigNumberish,
      _assetBoughtAmount: BigNumberish,
      _assetSoldReserve: BigNumberish,
      _assetBoughtReserve: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getBuyPriceWithRoyalty(uint256,uint256,uint256,uint256)"(
      _tokenId: BigNumberish,
      _assetBoughtAmount: BigNumberish,
      _assetSoldReserve: BigNumberish,
      _assetBoughtReserve: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getCurrencyInfo(overrides?: CallOverrides): Promise<BigNumber>;

    "getCurrencyInfo()"(overrides?: CallOverrides): Promise<BigNumber>;

    getCurrencyReserves(
      _ids: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getCurrencyReserves(uint256[])"(
      _ids: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getFactoryAddress(overrides?: CallOverrides): Promise<BigNumber>;

    "getFactoryAddress()"(overrides?: CallOverrides): Promise<BigNumber>;

    getGlobalRoyaltyFee(overrides?: CallOverrides): Promise<BigNumber>;

    "getGlobalRoyaltyFee()"(overrides?: CallOverrides): Promise<BigNumber>;

    getGlobalRoyaltyRecipient(overrides?: CallOverrides): Promise<BigNumber>;

    "getGlobalRoyaltyRecipient()"(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getLPFee(overrides?: CallOverrides): Promise<BigNumber>;

    "getLPFee()"(overrides?: CallOverrides): Promise<BigNumber>;

    getOwner(overrides?: CallOverrides): Promise<BigNumber>;

    "getOwner()"(overrides?: CallOverrides): Promise<BigNumber>;

    getPrice_currencyToToken(
      _ids: BigNumberish[],
      _tokensBought: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getPrice_currencyToToken(uint256[],uint256[])"(
      _ids: BigNumberish[],
      _tokensBought: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getPrice_tokenToCurrency(
      _ids: BigNumberish[],
      _tokensSold: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getPrice_tokenToCurrency(uint256[],uint256[])"(
      _ids: BigNumberish[],
      _tokensSold: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getRoyalties(
      _royaltyRecipient: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getRoyalties(address)"(
      _royaltyRecipient: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getRoyaltiesNumerator(
      _royaltyRecipient: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getRoyaltiesNumerator(address)"(
      _royaltyRecipient: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getRoyaltyInfo(
      _tokenId: BigNumberish,
      _cost: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getRoyaltyInfo(uint256,uint256)"(
      _tokenId: BigNumberish,
      _cost: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getSellPrice(
      _assetSoldAmount: BigNumberish,
      _assetSoldReserve: BigNumberish,
      _assetBoughtReserve: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getSellPrice(uint256,uint256,uint256)"(
      _assetSoldAmount: BigNumberish,
      _assetSoldReserve: BigNumberish,
      _assetBoughtReserve: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getSellPriceWithRoyalty(
      _tokenId: BigNumberish,
      _assetSoldAmount: BigNumberish,
      _assetSoldReserve: BigNumberish,
      _assetBoughtReserve: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getSellPriceWithRoyalty(uint256,uint256,uint256,uint256)"(
      _tokenId: BigNumberish,
      _assetSoldAmount: BigNumberish,
      _assetSoldReserve: BigNumberish,
      _assetBoughtReserve: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getTokenAddress(overrides?: CallOverrides): Promise<BigNumber>;

    "getTokenAddress()"(overrides?: CallOverrides): Promise<BigNumber>;

    getTotalSupply(
      _ids: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getTotalSupply(uint256[])"(
      _ids: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    isApprovedForAll(
      _owner: string,
      _operator: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "isApprovedForAll(address,address)"(
      _owner: string,
      _operator: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    onERC1155BatchReceived(
      arg0: string,
      _from: string,
      _ids: BigNumberish[],
      _amounts: BigNumberish[],
      _data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"(
      arg0: string,
      _from: string,
      _ids: BigNumberish[],
      _amounts: BigNumberish[],
      _data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    onERC1155Received(
      _operator: string,
      _from: string,
      _id: BigNumberish,
      _amount: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "onERC1155Received(address,address,uint256,uint256,bytes)"(
      _operator: string,
      _from: string,
      _id: BigNumberish,
      _amount: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    safeBatchTransferFrom(
      _from: string,
      _to: string,
      _ids: BigNumberish[],
      _amounts: BigNumberish[],
      _data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"(
      _from: string,
      _to: string,
      _ids: BigNumberish[],
      _amounts: BigNumberish[],
      _data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    safeTransferFrom(
      _from: string,
      _to: string,
      _id: BigNumberish,
      _amount: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "safeTransferFrom(address,address,uint256,uint256,bytes)"(
      _from: string,
      _to: string,
      _id: BigNumberish,
      _amount: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    sendRoyalties(
      _royaltyRecipient: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "sendRoyalties(address)"(
      _royaltyRecipient: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setApprovalForAll(
      _operator: string,
      _approved: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "setApprovalForAll(address,bool)"(
      _operator: string,
      _approved: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setRoyaltyInfo(
      _fee: BigNumberish,
      _recipient: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "setRoyaltyInfo(uint256,address)"(
      _fee: BigNumberish,
      _recipient: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    supportsInterface(
      interfaceID: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "supportsInterface(bytes4)"(
      interfaceID: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    uri(_id: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>;

    "uri(uint256)"(
      _id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    balanceOf(
      _owner: string,
      _id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "balanceOf(address,uint256)"(
      _owner: string,
      _id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    balanceOfBatch(
      _owners: string[],
      _ids: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "balanceOfBatch(address[],uint256[])"(
      _owners: string[],
      _ids: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    buyTokens(
      _tokenIds: BigNumberish[],
      _tokensBoughtAmounts: BigNumberish[],
      _maxCurrency: BigNumberish,
      _deadline: BigNumberish,
      _recipient: string,
      _extraFeeRecipients: string[],
      _extraFeeAmounts: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "buyTokens(uint256[],uint256[],uint256,uint256,address,address[],uint256[])"(
      _tokenIds: BigNumberish[],
      _tokensBoughtAmounts: BigNumberish[],
      _maxCurrency: BigNumberish,
      _deadline: BigNumberish,
      _recipient: string,
      _extraFeeRecipients: string[],
      _extraFeeAmounts: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    changeOwnableParent(
      _newParent: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "changeOwnableParent(address)"(
      _newParent: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    getBuyPrice(
      _assetBoughtAmount: BigNumberish,
      _assetSoldReserve: BigNumberish,
      _assetBoughtReserve: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getBuyPrice(uint256,uint256,uint256)"(
      _assetBoughtAmount: BigNumberish,
      _assetSoldReserve: BigNumberish,
      _assetBoughtReserve: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getBuyPriceWithRoyalty(
      _tokenId: BigNumberish,
      _assetBoughtAmount: BigNumberish,
      _assetSoldReserve: BigNumberish,
      _assetBoughtReserve: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getBuyPriceWithRoyalty(uint256,uint256,uint256,uint256)"(
      _tokenId: BigNumberish,
      _assetBoughtAmount: BigNumberish,
      _assetSoldReserve: BigNumberish,
      _assetBoughtReserve: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getCurrencyInfo(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "getCurrencyInfo()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getCurrencyReserves(
      _ids: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getCurrencyReserves(uint256[])"(
      _ids: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getFactoryAddress(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "getFactoryAddress()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getGlobalRoyaltyFee(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getGlobalRoyaltyFee()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getGlobalRoyaltyRecipient(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getGlobalRoyaltyRecipient()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getLPFee(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "getLPFee()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getOwner(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "getOwner()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getPrice_currencyToToken(
      _ids: BigNumberish[],
      _tokensBought: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getPrice_currencyToToken(uint256[],uint256[])"(
      _ids: BigNumberish[],
      _tokensBought: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getPrice_tokenToCurrency(
      _ids: BigNumberish[],
      _tokensSold: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getPrice_tokenToCurrency(uint256[],uint256[])"(
      _ids: BigNumberish[],
      _tokensSold: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getRoyalties(
      _royaltyRecipient: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getRoyalties(address)"(
      _royaltyRecipient: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getRoyaltiesNumerator(
      _royaltyRecipient: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getRoyaltiesNumerator(address)"(
      _royaltyRecipient: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getRoyaltyInfo(
      _tokenId: BigNumberish,
      _cost: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getRoyaltyInfo(uint256,uint256)"(
      _tokenId: BigNumberish,
      _cost: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getSellPrice(
      _assetSoldAmount: BigNumberish,
      _assetSoldReserve: BigNumberish,
      _assetBoughtReserve: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getSellPrice(uint256,uint256,uint256)"(
      _assetSoldAmount: BigNumberish,
      _assetSoldReserve: BigNumberish,
      _assetBoughtReserve: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getSellPriceWithRoyalty(
      _tokenId: BigNumberish,
      _assetSoldAmount: BigNumberish,
      _assetSoldReserve: BigNumberish,
      _assetBoughtReserve: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getSellPriceWithRoyalty(uint256,uint256,uint256,uint256)"(
      _tokenId: BigNumberish,
      _assetSoldAmount: BigNumberish,
      _assetSoldReserve: BigNumberish,
      _assetBoughtReserve: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getTokenAddress(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "getTokenAddress()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getTotalSupply(
      _ids: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getTotalSupply(uint256[])"(
      _ids: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    isApprovedForAll(
      _owner: string,
      _operator: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "isApprovedForAll(address,address)"(
      _owner: string,
      _operator: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    onERC1155BatchReceived(
      arg0: string,
      _from: string,
      _ids: BigNumberish[],
      _amounts: BigNumberish[],
      _data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"(
      arg0: string,
      _from: string,
      _ids: BigNumberish[],
      _amounts: BigNumberish[],
      _data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    onERC1155Received(
      _operator: string,
      _from: string,
      _id: BigNumberish,
      _amount: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "onERC1155Received(address,address,uint256,uint256,bytes)"(
      _operator: string,
      _from: string,
      _id: BigNumberish,
      _amount: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    safeBatchTransferFrom(
      _from: string,
      _to: string,
      _ids: BigNumberish[],
      _amounts: BigNumberish[],
      _data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"(
      _from: string,
      _to: string,
      _ids: BigNumberish[],
      _amounts: BigNumberish[],
      _data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    safeTransferFrom(
      _from: string,
      _to: string,
      _id: BigNumberish,
      _amount: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "safeTransferFrom(address,address,uint256,uint256,bytes)"(
      _from: string,
      _to: string,
      _id: BigNumberish,
      _amount: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    sendRoyalties(
      _royaltyRecipient: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "sendRoyalties(address)"(
      _royaltyRecipient: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setApprovalForAll(
      _operator: string,
      _approved: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "setApprovalForAll(address,bool)"(
      _operator: string,
      _approved: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setRoyaltyInfo(
      _fee: BigNumberish,
      _recipient: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "setRoyaltyInfo(uint256,address)"(
      _fee: BigNumberish,
      _recipient: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    supportsInterface(
      interfaceID: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "supportsInterface(bytes4)"(
      interfaceID: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    uri(
      _id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "uri(uint256)"(
      _id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
