/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Contract, ContractFactory, Signer } from "ethers";
import { Provider } from "ethers/providers";
import { UnsignedTransaction } from "ethers/utils/transaction";

import { TransactionOverrides } from ".";
import { ERC1155Metadata } from "./ERC1155Metadata";

export class ERC1155MetadataFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: TransactionOverrides): Promise<ERC1155Metadata> {
    return super.deploy(overrides) as Promise<ERC1155Metadata>;
  }
  getDeployTransaction(overrides?: TransactionOverrides): UnsignedTransaction {
    return super.getDeployTransaction(overrides);
  }
  attach(address: string): ERC1155Metadata {
    return super.attach(address) as ERC1155Metadata;
  }
  connect(signer: Signer): ERC1155MetadataFactory {
    return super.connect(signer) as ERC1155MetadataFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155Metadata {
    return new Contract(address, _abi, signerOrProvider) as ERC1155Metadata;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "_uri",
        type: "string"
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_id",
        type: "uint256"
      }
    ],
    name: "URI",
    type: "event"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256"
      }
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string"
      }
    ],
    stateMutability: "view",
    type: "function"
  }
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506102b6806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80630e89341c14610030575b600080fd5b61004d6004803603602081101561004657600080fd5b50356100c2565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561008757818101518382015260200161006f565b50505050905090810190601f1680156100b45780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b606060006100cf836101a6565b604051602001808380546001816001161561010002031660029004801561012d5780601f1061010b57610100808354040283529182019161012d565b820191906000526020600020905b815481529060010190602001808311610119575b5050825160208401908083835b602083106101595780518252601f19909201916020918201910161013a565b6001836020036101000a0380198251168184511680821785525050505050509050018064173539b7b760d91b8152506005019250505060405160208183030381529060405290505b919050565b6060816101cb57506040805180820190915260018152600360fc1b60208201526101a1565b818060005b82156101e457600101600a830492506101d0565b60608167ffffffffffffffff811180156101fd57600080fd5b506040519080825280601f01601f191660200182016040528015610228576020820181803683370190505b50905060001982015b831561027657600a840660300160f81b8282806001900393508151811061025457fe5b60200101906001600160f81b031916908160001a905350600a84049350610231565b509594505050505056fea264697066735822122086cfb387e679380da072b93d59df8efd911c213fa3b19ab8742550d9e13f768c64736f6c63430006080033";
